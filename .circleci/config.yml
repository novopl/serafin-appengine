version: 2

jobs:
  build:
    docker:
        - image: novopl/python36:ci-alpine
    steps:
      - checkout
      - restore_cache:
          key: deps-rev1-{{ checksum "setup.py" }}

      - run:
          name: Setup dependencies
          command: |
            which pip
            which python
            python --version
            pip --version
            pip install .
            pip install -r ops/devrequirements.txt
            peltak --help

      - run:
          name: Lint
          command: peltak lint

      - run:
          name: Test
          command: peltak test --allow-empty

#      - run:
#          name: Build Documentation
#          command: |
#            peltak docs --recreate --run-doctests
#            mv docs/html docs/serafin-appengine-docs
#            cd docs && zip -r ../.build/serafin-appengine-docs.zip serafin-appengine-docs

      - store_test_results:
          path: .build
      - store_artifacts:
          path: .build/coverage/
          destination: coverage
#      - store_artifacts:
#          path: .build/serafin-appengine-docs.zip
#          destination: serafin-appengine-docs.zip

  release:
    docker:
      - image: novopl/python36:ci-alpine
    steps:
      - checkout
      - restore_cache:
          key: deps-rev1-{{ checksum "setup.py" }}

      - run:
          name: Setup
          command: pip install .

      - run:
          name: Upload to pypi
          command: |
            peltak pypi configure
            peltak pypi upload
            rm ~/.pypirc

      - run:
          name: Create release tag
          command: |
            peltak release tag -m "$(peltak changelog)"
            git push origin v$(peltak version --porcelain)


workflows:
  version: 2
  full_pipe:
    jobs:
      - build
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
